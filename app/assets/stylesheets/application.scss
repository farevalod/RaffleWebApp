/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */

/* El codigo a continuacion fue sacado del curso de HTML de Codecademi */


body {
  background: #EEE;
  margin: 0;
  padding: 0;
}

/* Navigation */

.navigation {
  box-sizing: border-box;
  background-color: #3587A4;
  overflow: auto;
  padding: 18px 50px;
  position: relative;
  top: 0;
  width: 100%;
  z-index: 999;
}

ul {
  padding: 0;
  margin: 0;
}

li {
  color: #FFF;
  display: inline-block;
  font-family: 'Oxygen', sans-serif;
  font-size: 16px;
  font-weight: 300;
  letter-spacing: 2px;
  margin: 0;
  padding: 20px 18px 10px 18px;
  text-transform: uppercase;
}

.active {
  color: #88CCF1;
}

/* Table */

table {
  border-collapse: collapse;
  height: 40%;
  left: 10%;
  margin: 20px auto;
  overflow-y: scroll;
  position: static;
  width: 80%;
}

thead th {
  background: #88CCF1;
  color: #FFF;
  font-family: 'Lato', sans-serif;
  font-size: 16px;
  font-weight: 100;
  letter-spacing: 2px;
  text-transform: uppercase;
}

tr {
  background: #f4f7f8;
  border-bottom: 1px solid #FFF;
  margin-bottom: 5px;
}

th, td {
  font-family: 'Lato', sans-serif;
  font-size: 18px;
  font-weight: 400;
  padding: 20px;
  text-align: left;
  width: 33.3333%;
}

.search {
  background-color: #FFF;
  border: 1px solid #DDD;
  border-radius: 3px;
  color: #AAA;
  padding: 20px;
  margin: 50px auto 0px auto;
  width: 77%;
}

//Codigo depot

//#notice {
//  color: #000 !important;
//  border: 2px solid red;
//  padding: 1em;
//  margin-bottom: 2em;
//  background-color: #f0f0f0;
//  font: bold smaller sans-serif;
//}
//#notice:empty {
//  display: none
//}
#notice {
  color: #000 !important;
  border: 2px solid red;
  padding: 1em;
  margin-bottom: 2em;
  background-color: #f0f0f0;
  font: bold smaller sans-serif;
}
#notice:empty {
  display: none
}

//Para los formularios:

//.transition, form button, form .question label, form .question input[type="text"] {
//  -moz-transition: all 0.25s cubic-bezier(0.53, 0.01, 0.35, 1.5);
//  -o-transition: all 0.25s cubic-bezier(0.53, 0.01, 0.35, 1.5);
//  -webkit-transition: all 0.25s cubic-bezier(0.53, 0.01, 0.35, 1.5);
//  transition: all 0.25s cubic-bezier(0.53, 0.01, 0.35, 1.5);
//}
//
//* {
//  font-family: Helvetica, sans-serif;
//  font-weight: light;
//  -webkit-font-smoothing: antialiased;
//}
//
////html {
////  background-color: #ff4a56;
////}
//
//form {
//  position: relative;
//  display: inline-block;
//  max-width: 700px;
//  min-width: 500px;
//  box-sizing: border-box;
//  padding: 30px 25px;
//  background-color: white;
//  border-radius: 40px;
//  margin: 40px 0;
//  left: 50%;
//  -moz-transform: translate(-50%, 0);
//  -ms-transform: translate(-50%, 0);
//  -webkit-transform: translate(-50%, 0);
//  transform: translate(-50%, 0);
//}
//form h1 {
//  color: #ff4a56;
//  font-weight: 100;
//  letter-spacing: 0.01em;
//  margin-left: 15px;
//  margin-bottom: 35px;
//  text-transform: uppercase;
//}
//form button {
//  margin-top: 35px;
//  background-color: white;
//  border: 1px solid #ff4a56;
//  line-height: 0;
//  font-size: 17px;
//  display: inline-block;
//  box-sizing: border-box;
//  padding: 20px 15px;
//  border-radius: 60px;
//  color: #ff4a56;
//  font-weight: 100;
//  letter-spacing: 0.01em;
//  position: relative;
//  z-index: 1;
//}
//form button:hover, form button:focus {
//  color: white;
//  background-color: #ff4a56;
//}
//form .question {
//  position: relative;
//  padding: 10px 0;
//}
//form .question:first-of-type {
//  padding-top: 0;
//}
//form .question:last-of-type {
//  padding-bottom: 0;
//}
//form .question label {
//  transform-origin: left center;
//  color: #ff4a56;
//  font-weight: 100;
//  letter-spacing: 0.01em;
//  font-size: 17px;
//  box-sizing: border-box;
//  padding: 10px 15px;
//  display: block;
//  position: absolute;
//  margin-top: -40px;
//  z-index: 2;
//  pointer-events: none;
//}
//form .question input[type="text"] {
//  appearance: none;
//  background-color: none;
//  border: 1px solid #ff4a56;
//  line-height: 0;
//  font-size: 17px;
//  width: 100%;
//  display: block;
//  box-sizing: border-box;
//  padding: 10px 15px;
//  border-radius: 60px;
//  color: #ff4a56;
//  font-weight: 100;
//  letter-spacing: 0.01em;
//  position: relative;
//  z-index: 1;
//}
//form .question input[type="text"]:focus {
//  outline: none;
//  background: #ff4a56;
//  color: white;
//  margin-top: 30px;
//}
//form .question input[type="text"]:valid {
//  margin-top: 30px;
//}
//form .question input[type="text"]:focus ~ label {
//  -moz-transform: translate(0, -35px);
//  -ms-transform: translate(0, -35px);
//  -webkit-transform: translate(0, -35px);
//  transform: translate(0, -35px);
//}
//form .question input[type="text"]:valid ~ label {
//  text-transform: uppercase;
//  font-style: italic;
//  -moz-transform: translate(5px, -35px) scale(0.6);
//  -ms-transform: translate(5px, -35px) scale(0.6);
//  -webkit-transform: translate(5px, -35px) scale(0.6);
//  transform: translate(5px, -35px) scale(0.6);
//}

/* ----- SimpleForm Styles ----- */

.simple_form {
  vertical-align: middle;
  horiz-align: center;

  div.input {
    margin-bottom: 10px;
    clear: both;
    /* Required for Webkit, but not for Gecko */
  }
  label {
    float: left;
    width: 100px;
    text-align: right;
    margin: 2px 10px;
  }
}

div.boolean, .simple_form input[type='submit'] {
  margin-left: 120px;
}

div.boolean label {
  float: none;
  margin: 0;
}

label.collection_radio_buttons {
  float: none;
  margin: 0;
  margin-right: 10px;
  vertical-align: -2px;
  margin-left: 2px;
}

.field_with_errors {
  background-color: #ff3333;
}

.simple_form {
  .error {
    clear: left;
    color: black;
    display: block;
    margin-left: 120px;
  }
  .hint {
    clear: left;
    margin-left: 120px;
    color: #555;
    display: block;
    font-style: italic;
  }
}

input {
  &.radio {
    margin-right: 5px;
    vertical-align: -3px;
  }
  &.check_boxes {
    margin-left: 3px;
    vertical-align: -3px;
  }
}

label.collection_check_boxes {
  float: none;
  margin: 0;
  vertical-align: -2px;
  margin-left: 2px;
}